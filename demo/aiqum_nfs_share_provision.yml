- hosts: localhost
# Make sure AIQUM credentials are updated in aiqum_credentials.yml file before trying this playbook
  vars_files: aiqum_credentials.yml
  vars:
      psl: Perfomance
      cluster: cluster1
      svm: svm1
      state: present # Possible values are present,absent
      filesharename: demonfs
      filesharesize: 1
      sizeunit: GB # Possible values are MB,KB,GB,TB
      mountpoint: /demonfs
      allowed_clients: 0.0.0.0/0
      index: 1
      nfsv3: true # Possible values are true, false
      nfsv4: true # Possible values are true, false
      read_only_rule: 0.0.0.0/0 # Possible values are from SYS,NTLM,KERBEROS5,KERBEROS5I,KERBEROS5P,NONE,NEVER,ANY or  any, none, never, kerberos5, kerberos5i, kerberos5p, ntlm, sys
      read_write_rule: 0.0.0.0/0 # Possible values are from SYS,NTLM,KERBEROS5,KERBEROS5I,KERBEROS5P,NONE,NEVER,ANY or  any, none, never, kerberos5, kerberos5i, kerberos5p, ntlm, sys


  tasks:
    - name: Manage a NFS Share with specified Performance Service Level by the name
      aiqum_file_shares:
        state={{ state }}
        hostip={{ aiqumIP }}
        port={{ aiqumPort }}
        user={{ aiqumUser }}
        password={{ aiqumPassword }}
        cluster={{ cluster }}
        svm={{ svm }}
        performance_service_level={{ psl }}
        name={{ filesharename }}
        capacity={{ filesharesize }}
        capacity_unit={{ sizeunit }}
        mountpoint={{ mountpoint }}
        allowed_clients={{ allowed_clients }}
        index={{ index }}
        nfsv3={{ nfsv3 }}
        nfsv4={{ nfsv4 }}
        read_only_rule={{ read_only_rule }}
        read_write_rule={{ read_write_rule }}
      no_log: false
      register: fileshareCreate

    - name: Print the state of the operation
      debug: msg="Creation/Updation of FileShare in specified PSL {{fileshareCreate["meta"]["state"]}}"
